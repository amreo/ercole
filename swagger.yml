openapi: '3.0.2'
info:
  title: API Ercole 2.0
  version: '1.0.0'
  license:
    name: GNU General Public License v3.0 or later
    url: https://www.gnu.org/licenses/gpl-3.0-standalone.html
  description: API used to talk to ercole services
  contact:
    name: Issues support
    url: https://github.com/amreo/ercole-services
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/amreo/ercole/1.0.0
  
tags:
  - name: data-service
    description: API served by data-service
  - name: alert-service
    description: API served by alert-service
  - name: api-service
    description: API served by api-service
  - name: fe-user
    description: API used by the end user
  - name: agent-user
    description: API used by the ercole-agent
  - name: developer-user
    description: API used by the developers
  - name: service-user
    description: API used by the services
  - name: read
    description: API that don't change the state of the informations
  - name: write
    description: API that change the state of the informations
    
components:
  securitySchemes:
    basicAuthDataService:
      type: http
      scheme: basic
      description: access to data-service APIs
    basicAuthAlertService:
      type: http
      scheme: basic
      description: access to alert-service APIs
    basicAuthApiService:
      type: http
      scheme: basic
      description: access to api-service APIs
    tokenAuthApiService:
      type: http
      scheme: bearer    
      bearerFormat: JWT
      description: access using the access token 
  responses:
    error:
      description: Contains some informations about a error
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - Error
              - ErrorDescription
              - SourceFilename
              - LineNumber
            properties:
              Error:
                type: string
              ErrorDescription:
                type: string
              SourceFilename:
                type: string
              LineNumber:
                type: integer
          examples:
            Test1: 
              value:
                Error: Invalid  status
                ErrorDescription: invalid status
                SourceFilename: "/home/travis/go/src/github.com/amreo/ercole-services/api-service/controller/alerts_api.go"
                LineNumber: 65
paths:
  /ping:
    get:
      summary: Check the availability of the server
      description: Check the availability of the server
      tags:
        - data-service
        - api-service
        - alert-service
        - developer-user
        - read
      operationId: ping
      responses:
        '200':
          description: OK
          content: 
            'text/plain':
              schema:
                type: string
                example: PONG!
                readOnly: true
  /queue/host-data-insertion/{id}:
    post: 
      tags:
        - alert-service
        - service-user
        - write
      security:
        - basicAuthAlertService: []
      summary: Enqueue a host data insertion event
      description: Add a host data insertion event to the queue
      operationId: hostDataInsertion
      parameters:
        - in: path
          name: id
          description: ID of the inserted hostdata
          required: true
          schema:
            type: string
            minLength: 24
            maxLength: 24
            pattern: '^[0-9a-fA-F]+$'
            example: 5e3a95f6d76af99696203d4a        
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /user/login:
    post:
      tags:
        - api-service
        - fe-user
      summary: Request access token
      description: Request a user access token given the credentials. Note that the behaviour and interface may change if the service is configured to use different authentication provider.
      operationId: GetToken
      responses:
        '200':
          description: 'Access token'
          content:
            'text/plain':
              schema:
                type: string
                readOnly: true
                example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsidXNlciJdLCJleHAiOjE1ODg2NjExMjMsImlhdCI6MTU4ODY2MDIyMywiaXNzIjoiZXJjb2xlIiwianRpIjoidXNlciIsIm5iZiI6MTU4ODY2MDIyMywic3ViIjoidXNlciJ9.QJhUuBR4Z8uPncXITUjRVHktZXLVax1wstMMd4x6qSDPmxGbYTfOINUawgNNSV9ho-C0rh3icks3Q3227fiyUEcdV0Tfa2O5t7lJX0A4MdTnd2sVv_xxlMju8lCBGnf82fvtSg3C0rQsWnmxgC1rBDW3lzru0ffIJG_JrV3mNxhigniBzm_C0Gq1AaL2cmZ0POCnYJReYcLY-9maKRhMsjcart8pqGZ-5jEjMNWxSc7Lh2snCZklFE0NrmtxvaWITSjm4JGWvTwZcWIfTNBiZRABr5OKARVPMsdgOZ--a4kjIsdXngtIX-C5iaISrgRAUv89XInNBvrquqXnq7p5vg
                description: JWT access token
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts:
    get: 
      tags: 
        - api-service
        - fe-user
      security:
        - basicAuthApiService: []
        - tokenAuthApiService: []
      operationId: SearchHosts
      summary: Search a list of hosts
      description: Get a list of hosts filtered using various search terms and various params. Can also generate a XLSX file
      parameters:
        - in: query
          name: mode
          required: false
          description: change the scheme of the output
          allowEmptyValue: true
          example: full
          schema: 
            type: string
            readOnly: true
            enum:
              - full
              - summary
              - lms
              - mhd
        - in: query
          name: search
          required: false
          description: filter the result using search terms
          allowEmptyValue: true
          example: foobar
          schema: 
            type: string
            readOnly: true
        - in: query
          name: sort-by
          required: false
          description: filter the result using search terms
          allowEmptyValue: true
          example: foobar
          schema: 
            type: string
            readOnly: true
      responses:
        '200': 
          description: 'Result of the search'
          content:
            'application/json':
              example: 'TODO'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'