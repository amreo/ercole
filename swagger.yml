openapi: 3.0.2
info:
  title: API Ercole 2.0
  version: 1.0.0
  license:
    name: GNU General Public License v3.0 or later
    url: 'https://www.gnu.org/licenses/gpl-3.0-standalone.html'
  description: API used to talk to ercole services
  contact:
    name: Issues support
    url: 'https://github.com/ercole-io/ercole'
servers:
  - description: Api service on dev.ercole.io
    url: 'https://dev.ercole.io/api'
  - description: Data service on dev.ercole.io
    url: 'https://dev.ercole.io/data'
  - description: Alert service on dev.ercole.io
    url: 'https://dev.ercole.io/alert'
  - description: Repo service on dev.ercole.io
    url: 'https://dev.ercole.io/repo'
  - description: localhost address
    url: 'http://localhost:11111'
tags:
  - name: data-service
    description: API served by data-service
  - name: alert-service
    description: API served by alert-service
  - name: api-service
    description: API served by api-service
  - name: fe-user
    description: API used by the end user
  - name: agent-user
    description: API used by the ercole-agent
  - name: developer-user
    description: API used by the developers
  - name: service-user
    description: API used by the services
  - name: read
    description: "API that don't change the state of the informations"
  - name: write
    description: API that change the state of the informations
components:
  securitySchemes:
    basicAuthDataService:
      type: http
      scheme: basic
      description: access to data-service APIs
    basicAuthAlertService:
      type: http
      scheme: basic
      description: access to alert-service APIs
    basicAuthApiService:
      type: http
      scheme: basic
      description: access to api-service APIs
    tokenAuthApiService:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: access using the access token
  responses:
    error:
      description: Contains some informations about a error
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - Error
              - ErrorDescription
              - SourceFilename
              - LineNumber
            properties:
              Error:
                type: string
              ErrorDescription:
                type: string
              SourceFilename:
                type: string
              LineNumber:
                type: integer
          examples:
            Test1:
              value:
                Error: Invalid  status
                ErrorDescription: invalid status
                SourceFilename: /home/travis/go/src/github.com/ercole-io/ercole/api-service/controller/alerts_api.go
                LineNumber: 65
  schemas:
    HostDataInfo:
      type: object
      required:
        - Hostname
        - Environment
        - Location
        - CPUModel
        - CPUCores
        - CPUThreads
        - Socket
        - Type
        - Virtual
        - Kernel
        - OS
        - MemoryTotal
        - SwapTotal
        - OracleCluster
        - VeritasCluster
        - SunCluster
        - AixCluster
      properties:
        Hostname:
          type: string
          pattern: "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
        Environment:
          type: string
        Location:
          type: string
        CPUModel:
          type: string
        CPUCores:
          type: integer
        CPUThreads:
          type: integer
        Socket:
          type: integer
        Type:
          type: string
        Virtual:
          type: boolean
        Kernel:
          type: string
        OS:
          type: string
        MemoryTotal:
          type: number
        SwapTotal:
          type: number
        OracleCluster:
          type: boolean
        VeritasCluster:
          type: boolean
        SunCluster:
          type: boolean
        AixCluster:
          type: boolean
    Filesystems:
      type: array
      items:
        type: object
        properties:
          Filesystem:
            type: string
          FsType:
            type: string
          Size:
            type: string
          Used:
            type: string
          UsedPerc:
            type: string
          MountedOn:
            type: string
        required:
          - Filesystem
          - FsType
          - Size
          - Used
          - UsedPerc
          - MountedOn
    Patch:
      type: object
      properties:
        Database:
          type: string
        Version:
          type: string
        PatchID:
          type: string
        Action:
          type: string
        Description:
          type: string
        Date:
          type: string
      required:
        - Database
        - Version
        - PatchID
        - Action
        - Description
        - Date
    Tablespace:
      type: object
      properties:
        Database:
          type: string
        Name:
          type: string
        MaxSize:
          type: string
        Total:
          type: string
        Used:
          type: string
        UsedPerc:
          type: string
        Status:
          type: string
      required:
        - Database
        - Name
        - MaxSize
        - Total
        - Used
        - UsedPerc
        - Status
    Schema:
      type: object
      properties:
        Database:
          type: string
        User:
          type: string
        Total:
          type: integer
        Tables:
          type: integer
        Indexes:
          type: integer
        LOB:
          type: integer
      required:
        - Database
        - User
        - Total
        - Tables
        - Indexes
        - LOB
    OracleDatabaseFeature:
      type: object
      properties:
        Name:
          type: string
        Status:
          type: boolean
      required:
        - Name
        - Status
    License:
      type: object
      properties:
        Name:
          type: string
        Count:
          type: number
      required:
        - Name
        - Count
    ADDM:
      type: object
      properties:
        Finding:
          type: string
        Recommendation:
          type: string
        Action:
          type: string
        Benefit:
          oneOf:
            - type: string
            - type: boolean
        Hostname:
          type: string
          nullable: true
        Location:
          type: string
          nullable: true
        Environment:
          type: string
          nullable: true
        CreatedAt:
          type: string
          nullable: true
      required:
        - Finding
        - Recommendation
        - Action
        - Benefit
    SegmentAdvisor:
      type: object
      properties:
        SegmentOwner:
          type: string
        SegmentName:
          type: string
        SegmentType:
          type: string
        PartitionName:
          type: string
        Reclaimable:
          type: string
        Recommendation:
          type: string
      required:
        - SegmentOwner
        - SegmentName
        - SegmentType
        - PartitionName
        - Reclaimable
        - Recommendation
    LastPSU:
      type: object
      properties:
        Date:
          type: string
        Description:
          type: string
      required:
        - Date
        - Description
    Backup:
      type: object
      properties:
        BackupType:
          type: string
        Hour:
          type: string
        WeekDays:
          type: string
        AvgBckSize:
          type: string
        Retention:
          type: string
      required:
        - BackupType
        - Hour
        - WeekDays
        - AvgBckSize
        - Retention
    Database:
      type: object
      properties:
        InstanceNumber:
          type: string
          nullable: true
        InstanceName:
          type: string
        Name:
          type: string
        UniqueName:
          type: string
        Status:
          type: string
        Version:
          type: string
        Platform:
          type: string
          nullable: true
        Archivelog:
          type: string
          nullable: true
        Charset:
          type: string
          nullable: true
        NCharset:
          type: string
          nullable: true
        BlockSize:
          type: string
        CPUCount:
          type: string
        SGATarget:
          type: string
          nullable: true
        PGATarget:
          type: string
          nullable: true
        MemoryTarget:
          type: string
          nullable: true
        SGAMaxSize:
          type: string
          nullable: true
        SegmentsSize:
          type: string
        Used:
          type: string
          nullable: true
        Allocated:
          type: string
          nullable: true
        Elapsed:
          type: string
          nullable: true
        DBTime:
          type: string
          nullable: true
        DailyCPUUsage:
          type: string
          nullable: true
        Work:
          type: string
        ASM:
          type: boolean
          nullable: true
        Dataguard:
          type: boolean
        RAC:
          nullable: true
          type: boolean
        HA:
          nullable: true
          type: boolean
        Hostname:
          type: string
          nullable: true
        Location:
          type: string
          nullable: true
        Environment:
          type: string
          nullable: true
        CreatedAt:
          type: string
          nullable: true
        ArchiveLogStatus:
          type: boolean
          nullable: true
        Memory:
          type: number
          nullable: true
        DatafileSize:
          type: number
          nullable: true
        Patches:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Patch'
        Tablespaces:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Tablespace'
        Schemas:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Tablespace'
        Features:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OracleDatabaseFeature'
        Licenses:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/License'
        ADDMs:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ADDM'
        SegmentAdvisors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/SegmentAdvisor'
        LastPSUs:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/LastPSU'
        Backups:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Backup'
        Changes:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/DatabaseChange'
      required:
        - Name
        - UniqueName
        - Status
        - Version
        - BlockSize
        - CPUCount
        - SegmentsSize
        - Work
        - Dataguard
    Cluster:
      type: object
      properties:
        Name:
          type: string
        Environment: 
          type: string
          nullable: true
        Location: 
          type: string
          nullable: true
        Hostname:
          type: string
          nullable: true
        HostnameAgentVirtualization:
          type: string
          nullable: true
        VirtualizationNodes:
          nullable: true
          anyOf:
            - type: string
              nullable: true
            - type: array
              items:
                type: string
              uniqueItems: true
        VirtualizationNodesCount:
          nullable: true
          type: integer
        VirtualizationNodesStats:
          nullable: true
          type: object
          required:
            - VirtualizationNode
            - TotalVMsCount
            - TotalVMsWithErcoleAgentCount
            - TotalVMsWithoutErcoleAgentCount
          properties:
            VirtualizationNode:
              type: string
            TotalVMsCount:
              type: integer
            TotalVMsWithErcoleAgentCount:
              type: integer
            TotalVMsWithoutErcoleAgentCount:
              type: integer
        Type:
          type: string
        CPU:
          type: integer
        Sockets:
          type: integer
        VMsCount:
          type: integer
          nullable: true
        VMsErcoleAgentCount:
          type: integer
          nullable: true
        VMs:
          type: array
          items:
            type: object
            properties:
              Name:
                type: string
              ClusterName:
                type: string
              Hostname:
                type: string
              CappedCPU:
                type: boolean
              VirtualizationNode:
                type: string
            required:
              - Name
              - ClusterName
              - Hostname
              - CappedCPU
              - VirtualizationNode
      required:
        - Name
        - Type
        - CPU
        - Sockets
        - VMs
    CellDisk:
      type: object
      properties:
        Name:
          type: string
        Status:
          type: string
        ErrCount:
          type: string
        UsedPerc:
          type: string
      required:
        - Name
        - Status
        - ErrCount
        - UsedPerc
    ExadataDev:
      type: object
      properties:
        Hostname:
          type: string
        ServerType:
          type: string
          nullable: true
        Model:
          type: string
        SwVersion:
          type: string
        CPUEnabled:
          type: string
          nullable: true
        Memory:
          type: string
          nullable: true
        Status:
          type: string
          nullable: true
        PowerCount:
          type: string
          nullable: true
        PowerStatus:
          type: string
          nullable: true
        FanCount:
          type: string
          nullable: true
        FanStatus:
          type: string
          nullable: true
        TempActual:
          type: string
          nullable: true
        TempStatus:
          type: string
          nullable: true
        CellsrvService:
          type: string
          nullable: true
        MsService:
          type: string
          nullable: true
        RsService:
          type: string
          nullable: true
        FlashcacheMode:
          type: string
          nullable: true
        CellDisks:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/CellDisk'
      required:
        - Hostname
        - Model
        - SwVersion
    HostData:
      description: A hostdata from FE
      type: object
      properties:
        Hostname:
          type: string
        Environment:
          type: string
        Location:
          type: string
        Version:
          type: string
        HostDataSchemaVersion:
          type: integer
        Databases:
          type: string
        Schemas:
          type: string
          nullable: true
        Info:
          $ref: '#/components/schemas/HostDataInfo'
        OS:
          type: string
          nullable: true
        Kernel:
          type: string
          nullable: true
        OracleCluster:
          type: boolean
          nullable: true
        SunCluster:
          type: boolean
          nullable: true
        VeritasCluster:
          type: boolean
          nullable: true
        Virtual:
          type: boolean
          nullable: true
        Type:
          type: string
          nullable: true
        CPUThreads:
          type: integer
          nullable: true
        CPUCores:
          type: integer
          nullable: true
        Socket:
          type: integer
          nullable: true
        MemTotal:
          type: integer
          nullable: true
        SwapTotal:
          type: integer
          nullable: true
        CPUModel:
          type: string
          nullable: true
        PhysicalServerName:
          type: string
          nullable: true
        VirtualServerName:
          type: string
          nullable: true
        VirtualizationTechnology:
          type: string
          nullable: true
        DBInstanceName:
          type: string
          nullable: true
        PluggableDatabaseName:
          type: string
          nullable: true
        ConnectString:
          type: string
          nullable: true
        ProductVersion:
          type: string
          nullable: true
        ProductEdition:
          type: string
          nullable: true
        Features:
          type: string
          nullable: true
        RacNodeNames:
          type: string
          nullable: true
        ProcessorModel:
          type: string
          nullable: true
        Processors:
          type: integer
          nullable: true
        CoresPerProcessor:
          type: integer
          nullable: true
        ThreadsPerCore:
          type: integer
          nullable: true
        ProcessorSpeed:
          type: string
          nullable: true
        ServerPurchaseDate:
          type: string
          nullable: true
        OperatingSystem:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        PhysicalCores:
          type: integer
          nullable: true
        History:
          type: array
          items:
            $ref: '#/components/schemas/HistoryEntry'
        Extra:
          type: object
          required:
            - Filesystems
          properties:
            Filesystems:
              $ref: '#/components/schemas/Filesystems'
            Databases:
              nullable: true
              type: array
              items:
                $ref: '#/components/schemas/Database'
            Clusters:
              nullable: true
              type: array
              items:
                $ref: '#/components/schemas/Cluster'
            Exadata:
              nullable: true
              type: object
              properties:
                Devices:
                  type: array
                  items:
                    $ref: '#/components/schemas/ExadataDev'
              required:
                - Devices
        Cluster:
          type: string
          nullable: true
        VirtualizationNode:
          type: string
          nullable: true
      required:
        - Hostname
        - Environment
        - Location
        - Version
        - HostDataSchemaVersion
        - Info
        - Extra
    PageMetadata:
      type: object
      required:
        - Empty
        - First
        - Last
        - Number
        - Size
        - TotalElements
        - TotalPages
      properties:
        Empty:
          type: boolean
        First:
          type: boolean
        Last:
          type: boolean
        Number:
          type: integer
        Size:
          type: integer
        TotalElements:
          type: integer
        TotalPages:
          type: integer
    HistoryEntry:
      type: object
      required:
        - _id
        - CreatedAt
      properties:
        _id:
          type: string
        CreatedAt:
          type: string
        TotalDailyCPUUsage:
          type: number
    DatabaseChange:
      type: object
      required:
        - DailyCPUUsage
        - SegmentsSize
        - Updated
        - Used
      properties:
        DailyCPUUsage:
          type: string
        SegmentsSize:
          type: string
        Updated:
          type: string
        Used:
          type: string
    PatchingFunction:
      type: object
      required:
        - Code
        - Vars
      properties:
        ID:
          type: string
          nullable: true
        Hostname:
          type: string
          nullable: true
        CreatedAt:
          type: string
          nullable: true
        Code:
          type: string
        Vars:
          type: object
    Alert:
      title: Alert
      type: object
      properties:
        OtherInfo:
          type: object
          properties:
            DbName:
              type: string
            Hostname:
              type: string
        Hostname:
          type: string
        Description:
          type: string
        AlertCategory:
          type: string
          enum:
            - SYSTEM
            - AGENT
            - LICENSE
        AlertAffectedTechnology:
          nullable: true
          type: string
          enum:
            - Oracle/Database
            - Oracle/Exadata
        AlertStatus:
          type: string
          enum:
            - NEW
            - ACK
          example: NEW
        AlertSeverity:
          type: string
          enum:
            - WARNING
            - CRITICAL
            - INFO
        AlertCode:
          type: string
          enum:
            - NEW_DATABASE
            - NEW_OPTION
            - NEW_LICENSE
            - NEW_SERVER
            - NO_DATA
        _id:
          type: string
          description: ID of the alert
      required:
        - Hostname
        - Description
        - AlertCategory
        - AlertAffectedTechnology
        - AlertStatus
        - AlertSeverity
        - AlertCode
        - _id
    PatchAdvisorInfo:
      type: object
      properties:
        Location:
          type: string
        Environment:
          type: string
        Hostname:
          type: string
          pattern: "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
        CreatedAt:
          type: string
        Date:
          type: string
        Dbname:
          type: string
        Dbver:
          type: string
        Description:
          type: string
        Status:
          type: string
        _id:
          type: string
      required:
        - Location
        - Environment
        - Hostname
        - CreatedAt
        - Date
        - Dbname
        - Dbver
        - Description
        - Status
        - _id
    ExadataSummary:
      type: object
      required:
        - Hostname
        - Location
        - Environment
        - CreatedAt
        - DBServers
        - StorageServers
        - IBSwitches
      properties:
        Hostname:
          type: string
        Location:
          type: string
        Environment:
          type: string
        CreatedAt:
          type: string
        DBServers:
          $ref: '#/components/schemas/ExadataDev'
        StorageServers:
          $ref: '#/components/schemas/ExadataDev'
        IBSwitches:
          $ref: '#/components/schemas/ExadataDev'
    Features: 
      type: object
      properties:
        Oracle/Database:
          type: boolean
          nullable: true
        Oracle/Exadata:
          type: boolean
          nullable: true
        Postgresql/Postgresql:
          type: boolean
          nullable: true
        Microsoft/SQLServer:
          type: boolean
          nullable: true
    TechnologyStatus:
      type: object
      required:
        - Product
        - HostsCount
        - Compliance
        - UnpaidDues
      properties:
        Product:
          type: string
        HostsCount:
          type: integer
        Compliance:
          type: number
        UnpaidDues:
          type: number
    AllTechnologyComplianceStatus:
      type: object
      required:
        - HostsCount
        - Compliance
        - UnpaidDues
      properties:
        HostsCount:
          type: integer
        Compliance:
          type: number
        UnpaidDues:
          type: number
    AggregatedCodeSeverityAlerts:
      type: object
      required:
        - Category
        - Code
        - Severity
        - Count
        - AffectedHosts
        - OldestAlert
      properties:
        Category:
          type: string
          enum:
            - SYSTEM
            - AGENT
            - LICENSE
        Code: 
          type: string
          externalDocs:
            url: https://github.com/ercole-io/ercole/blob/master/model/alert.go
        Severity:
          type: string
          externalDocs:
            url: https://github.com/ercole-io/ercole/blob/master/model/alert.go
        Count: 
          type: integer
        AffectedHosts:
          type: integer
        OldestAlert:
          type: string
          format: date-time
          example: '2020-05-05T08:23:40+00:00'
    AggregatedCategorySeverityAlerts:
      type: object
      required:
        - Category
        - Severity
        - Count
        - AffectedHosts
        - OldestAlert
      properties:
        Category:
          type: string
          enum:
            - SYSTEM
            - AGENT
            - LICENSE
        Severity:
          type: string
          externalDocs:
            url: https://github.com/ercole-io/ercole/blob/master/model/alert.go
        Count: 
          type: integer
        AffectedHosts:
          type: integer
        OldestAlert:
          type: string
          format: date-time
          example: '2020-05-05T08:23:40+00:00'
    LicenseCount:
      type: object
      properties:
        _id:
          type: string
        Used:
          type: number
        Count:
          type: number
        CostPerProcessor:
          type: number
        Unlimited:
          type: boolean
        PaidCost:
          type: number
        TotalCost:
          type: number
        Compliance:
          type: boolean
        Hosts:
          nullable: true
          type: array
          items:
            type: object
            required:
              - Hostname
              - Databases
            properties:
              Hostname:
                type: string
              Databases:
                type: array
                uniqueItems: true
                items:
                  type: string
      required:
        - _id
        - Used
        - Count
        - TotalCost
        - PaidCost
        - CostPerProcessor
        - Compliance
        - Unlimited
    LicenseModifier:
      type: object
      required:
        - _id
        - Hostname
        - DatabaseName
        - LicenseName
        - NewValue
      properties:
        _id: 
          type: string
        Hostname:
          type: string
        DatabaseName:
          type: string
        LicenseName:
          type: string
        NewValue:
          type: number
    TechnologyInfo:
      type: object
      required:
        - Product
        - PrettyName
        - Color
        - Logo
      properties:
        Product:
          type: string
        PrettyName:
          type: string
        Color:
          type: string
        Logo:
          type: string
          description: base64 encoded png 256x256 image
  parameters:
    search:
      in: query
      name: search
      required: false
      description: filter the result using search terms
      allowEmptyValue: true
      example: foobar
      schema:
        type: string
        readOnly: true
        example: foobar
    sort-by:
      in: query
      name: sort-by
      required: false
      description: sort the result by a field
      allowEmptyValue: true
      example: foobar
      schema:
        type: string
        readOnly: true
        example: CreatedAt
    sort-desc:
      schema:
        type: boolean
      in: query
      name: sort-desc
      description: |
        Sort the field descendently instead of ascendently
      allowEmptyValue: true
    page:
      schema:
        type: integer
      in: query
      name: page
      description: Number of the page
      allowEmptyValue: true
    size:
      schema:
        type: integer
      in: query
      name: size
      description: Size of the page
      allowEmptyValue: true
    location:
      schema:
        type: string
        example: Italy
      in: query
      name: location
      description: Filter by location
      allowEmptyValue: true
    environment:
      schema:
        type: string
        example: TST
      in: query
      name: environment
      description: Filter by environment
      allowEmptyValue: true
    older-than:
      schema:
        type: string
        format: date-time
        example: '2020-05-05T08:23:40+00:00'
      in: query
      name: older-than
      description: Filter until the date
      allowEmptyValue: true
    limit:
      schema:
        type: integer
        example: 15
      in: query
      name: limit
      description: Limit the size of the result
      allowEmptyValue: true
    window-time:
      schema:
        type: integer
        default: 6
      in: query
      name: window-time
      description: window time to check the patch date, in months
paths:
  /ping:
    get:
      summary: Check the availability of the server
      description: Check the availability of the server
      tags:
        - data-service
        - api-service
        - alert-service
        - developer-user
        - read
      operationId: ping
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: 'PONG!'
                readOnly: true
  '/queue/host-data-insertion/{id}':
    post:
      tags:
        - alert-service
        - service-user
        - write
      security:
        - basicAuthAlertService: []
      summary: Enqueue a host data insertion event
      description: Add a host data insertion event to the queue
      operationId: hostDataInsertion
      parameters:
        - in: path
          name: id
          description: ID of the inserted hostdata
          required: true
          schema:
            type: string
            minLength: 24
            maxLength: 24
            pattern: '^[0-9a-fA-F]+$'
            example: 5e3a95f6d76af99696203d4a
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /user/login:
    post:
      tags:
        - api-service
        - fe-user
      security: []
      summary: Request access token
      description: Request a user access token given the credentials. Note that the behaviour and interface may change if the service is configured to use different authentication provider.
      operationId: GetToken
      responses:
        '200':
          description: Access token
          content:
            text/plain:
              schema:
                type: string
                readOnly: true
                example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsidXNlciJdLCJleHAiOjE1ODg2NjExMjMsImlhdCI6MTU4ODY2MDIyMywiaXNzIjoiZXJjb2xlIiwianRpIjoidXNlciIsIm5iZiI6MTU4ODY2MDIyMywic3ViIjoidXNlciJ9.QJhUuBR4Z8uPncXITUjRVHktZXLVax1wstMMd4x6qSDPmxGbYTfOINUawgNNSV9ho-C0rh3icks3Q3227fiyUEcdV0Tfa2O5t7lJX0A4MdTnd2sVv_xxlMju8lCBGnf82fvtSg3C0rQsWnmxgC1rBDW3lzru0ffIJG_JrV3mNxhigniBzm_C0Gq1AaL2cmZ0POCnYJReYcLY-9maKRhMsjcart8pqGZ-5jEjMNWxSc7Lh2snCZklFE0NrmtxvaWITSjm4JGWvTwZcWIfTNBiZRABr5OKARVPMsdgOZ--a4kjIsdXngtIX-C5iaISrgRAUv89XInNBvrquqXnq7p5vg
                description: JWT access token
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts:
    get:
      tags:
        - api-service
        - fe-user
      operationId: SearchHosts
      summary: Search a list of hosts
      description: Get a list of hosts filtered using various search terms and various params. Can also generate a XLSX file
      parameters:
        - in: query
          name: mode
          description: change the scheme of the output
          allowEmptyValue: true
          example: full
          schema:
            type: string
            readOnly: true
            enum:
              - full
              - summary
              - lms
              - mhd
        - $ref: '#/components/parameters/search'
        - in: query
          name: hostname
          description: filter by hostname
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: database
          description: filter by a database name
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: technology
          description: filter by a technology
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: hardware-abstraction-technology
          description: filter by the HA technology
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: cluster
          description: filter by the name of virtualization cluster. use 'NULL' for searching host that aren't part of a virtualization cluster
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: physical-host
          description: filter by the name of physical host on which the host runs
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: operating-system
          description: filter by the operating system
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: kernel
          description: filter by the kernel
          allowEmptyValue: true
          schema:
            type: string
        - in: query
          name: memory-total-lte
          description: filter the hosts with the Info.MemoryTotal less than memory-total-lte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: memory-total-gte
          description: filter the hosts with the Info.MemoryTotal less than memory-total-gte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: swap-total-lte
          description: filter the hosts with the Info.SwapTotal less than swap-total-lte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: swap-total-gte
          description: filter the hosts with the Info.SwapTotal less than swap-total-gte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: is-member-of-cluster
          description: filter the host by operating systems cluster membership
          allowEmptyValue: true
          schema:
            type: boolean
        - in: query
          name: cpu-model
          description: filter by CPU model
          allowEmptyValue: true
          schema:
            type: boolean
        - in: query
          name: cpu-cores-lte
          description: filter the hosts with the Info.CPUCores less than cpu-cores-lte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: cpu-cores-gte
          description: filter the hosts with the Info.CPUCores less than cpu-cores-gte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: cpu-threads-lte
          description: filter the hosts with the Info.CPUThreads less than cpu-threads-lte value
          allowEmptyValue: true
          schema:
            type: number
        - in: query
          name: cpu-threads-gte
          description: filter the hosts with the Info.CPUThreads less than cpu-threads-gte value
          allowEmptyValue: true
          schema:
            type: number
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: Result of the search
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: full paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/HostData'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: full non paged
                    items:
                      $ref: '#/components/schemas/HostData'
                  - type: object
                    description: summary paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/HostData'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: summary non paged
                    items:
                      $ref: '#/components/schemas/HostData'
                  - type: object
                    description: lms paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/HostData'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: lms non paged
                    items:
                      $ref: '#/components/schemas/HostData'
            application/vnd.oracle.lms+vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/hosts/{hostname}':
    parameters:
      - in: path
        name: hostname
        schema:
          type: string
        required: true
        description: hostname of the requested host
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetHost
      summary: Get a host
      description: Get a host
      parameters:
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: Result of the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostData'
    delete:
      tags:
        - api-service
        - fe-user
        - write
      operationId: ArchiveHost
      summary: Archive a host
      description: Archive a host
      responses:
        '200':
          description: The host is archived
          content: {}
        '401':
          $ref: '#/components/responses/error'
        '404':
          description: The host is not found
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/hosts/{hostname}/patching-function':
    parameters:
      - in: path
        name: hostname
        schema:
          type: string
        required: true
        description: hostname of the requested host
    get:
      tags:
        - api-service
        - developer-user
        - read
      operationId: GetPatchingFunction
      summary: Get a patching function of a host
      description: Get a patching function of a host
      responses:
        '200':
          description: Patching function of the host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchingFunction'
        '401':
          $ref: '#/components/responses/error'
        '404':
          description: 'The host or patching function don"t exist'
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
    put:
      tags:
        - api-service
        - developer-user
        - write
      operationId: SetPatchingFunction
      summary: Set a patching function of a host
      description: Set the patching function of a host
      responses:
        '200':
          description: Patching function of the host
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchingFunction'
        '401':
          $ref: '#/components/responses/error'
        '404':
          description: 'The host don"t exist'
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/hosts/{hostname}/technologies/oracle/databases/{dbname}/tags':
    parameters:
      - in: path
        name: hostname
        schema:
          type: string
        required: true
        description: hostname of the requested host
      - in: path
        name: dbname
        schema:
          type: string
        required: true
        description: name of the modifying database
    post:
      tags:
        - api-service
        - fe-user
        - write
      operationId: AddTagToOracleDatabase
      summary: Add a tag to a database of a host
      description: Add a tag to a database of a host
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: The tag was successfully attached to the db
          content:
            application/json: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/hosts/{hostname}/technologies/oracle/databases/{dbname}/tags/{tagname}':
    parameters:
      - in: path
        name: hostname
        schema:
          type: string
        required: true
        description: hostname of the requested host
      - in: path
        name: dbname
        schema:
          type: string
        required: true
        description: name of the modifying database
      - in: path
        name: tagname
        schema:
          type: string
        required: true
        description: name of the tag
    delete:
      tags:
        - api-service
        - fe-user
        - write
      operationId: DeleteTagOfOracleDatabase
      summary: Delete a tag of a database of a host
      description: Add a tag of a database of a host
      responses:
        '200':
          description: The tag was successfully deleted from the db
          content:
            application/json: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/hosts/{hostname}/technologies/oracle/databases/{dbname}/licenses/{licenseName}':
    parameters:
      - in: path
        name: hostname
        schema:
          type: string
        required: true
        description: hostname of the requested host
      - in: path
        name: dbname
        schema:
          type: string
        required: true
        description: name of the modifying database
      - in: path
        name: licenseName
        schema:
          type: string
        required: true
        description: name of the license
    put:
      tags:
        - api-service
        - fe-user
        - write
      operationId: SetOracleDatabaseLicenseModifier
      summary: Change the value of a license of a database
      description: Change the value of a license of a database
      requestBody:
        content:
          text/plain:
            schema:
              type: number
      responses:
        '200':
          description: The value of the the license was changed successfully
          content:
            application/json: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/hosts/{hostname}/technologies/oracle/databases/{dbname}/license-modifiers/{licenseName}':
    parameters:
      - in: path
        name: hostname
        schema:
          type: string
        required: true
        description: hostname of the requested host
      - in: path
        name: dbname
        schema:
          type: string
        required: true
        description: name of the modifying database
      - in: path
        name: licenseName
        schema:
          type: string
        required: true
        description: name of the license
    delete:
      tags:
        - api-service
        - fe-user
        - write
      operationId: DeleteOracleDatabaseLicenseModifier
      summary: Delete a license modifier of a database
      description: Delete a license modifier of a database
      responses:
        '200':
          description: The license modifier was deleted successfully
          content:
            application/json: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: ListTechnologies
      summary: List all Technologies 
      description:  List all Technologies
      parameters:
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: Result of the search
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/TechnologyStatus'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: SearchOracleDatabases
      summary: Search a list of databases
      description: Get a list of databases filtered using various search terms and various params. Can also generate a XLSX file
      parameters:
        - in: query
          name: full
          description: output mode
          allowEmptyValue: true
          schema:
            type: boolean
            readOnly: true
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: Result of the search
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: full paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Database'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: full non paged
                    items:
                      $ref: '#/components/schemas/Database'
                  - type: object
                    description: not full paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Database'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: not full non paged
                    items:
                      $ref: '#/components/schemas/Database'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/addms:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: SearchOracleDatabaseAddms
      summary: Search a list of ADDMs
      description: Get a list of ADDMs filtered using various search terms and various params. Can also generate a XLSX file
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: Result of the search
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/ADDM'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: non paged
                    items:
                      $ref: '#/components/schemas/ADDM'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/locations:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: ListLocations
      summary: List the locations
      description: List the locations
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: List of the locations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                uniqueItems: true
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/environments:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: ListEnvironments
      summary: List the environments
      description: List the environments
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: List of the environments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                uniqueItems: true
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /alerts:
    get:
      summary: search alerts using the filters in the request
      description: search alerts using the filters in the request
      tags:
        - api-service
        - fe-user
      operationId: SearchAlerts
      parameters:
        - in: query
          name: mode
          description: output mode
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - all
              - aggregated-code-severity
              - aggregated-category-severity
            readOnly: true
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - in: query
          schema:
            type: string
            enum:
              - WARNING
              - CRITICAL
              - INFO
          name: severity
          description: Filter by severity
          allowEmptyValue: true
        - in: query
          name: status
          required: false
          description: Filter by status
          allowEmptyValue: true
          schema:
            type: string
            readOnly: true
            enum:
              - NEW
              - ACK
            example: NEW
        - in: query
          schema:
            type: string
            format: date-time
            example: '2020-05-05T08:23:40+00:00'
          name: from
          description: Filter from a date
          allowEmptyValue: true
        - in: query
          schema:
            type: string
            format: date-time
            example: '2021-05-05T08:23:40+00:00'
          name: to
          description: Filter until a date
          allowEmptyValue: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Alert'
                  - type: object
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Alert'
                      Metadata:
                        type: object
                        properties:
                          Empty:
                            type: boolean
                          First:
                            type: boolean
                          Last:
                            type: boolean
                          Number:
                            type: integer
                          Size:
                            type: integer
                          TotalElements:
                            type: integer
                          TotalPages:
                            type: integer
                  - type: array
                    items:
                      $ref: '#/components/schemas/AggregatedCodeSeverityAlerts'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/alerts/{id}':
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: alert id
    delete:
      summary: AckAlert ack the specified alert in the request
      description: AckAlert ack the specified alert in the request
      tags:
        - api-service
        - fe-user
      operationId: AckAlert
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/error'
        '403':
          description: The API is disabled because the service is put in read-only mode
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/clusters:
    get:
      summary: Search a list of clusters
      tags:
        - api-service
        - fe-user
        - read
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Cluster'
                  - type: object
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Cluster'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
            application/xml:
              schema:
                type: object
                properties: {}
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: object
                properties: {}
              examples: {}
      operationId: SearchClusters
      description: |-
        Search clusters data using the filters in the request.
        Return content type could be JSON or XLSX.
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
  /hosts/clusters/{name}:
    get:
      summary: Get a cluster
      tags:
        - api-service
        - fe-user
        - read
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      operationId: GetCluster
      description: |-
        Get cluster data using the filters in the request.
      parameters:
        - $ref: '#/components/parameters/older-than'
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: cluster name
  /hosts/technologies/oracle/exadata:
    get:
      summary: Search a list of exadata
      tags:
        - api-service
        - fe-user
        - read
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/ExadataSummary'
                  - type: object
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/ExadataSummary'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
      operationId: SearchOracleExadata
      description: |-
        Search exadata data using the filters in the request.
        Return content type could be JSON or XLSX.
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
  /hosts/technologies/oracle/databases/license-modifiers:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: SearchOracleDatabaseLicenseModifiers
      summary: Search a list of license modifiers
      description: Get a list of license modifiers using various search terms and various params.
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
      responses:
        '200':
          description: Result of the search
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    description: paged
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/LicenseModifier'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
                  - type: array
                    description: non paged
                    items:
                      $ref: '#/components/schemas/LicenseModifier'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/count:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetHostsCountStats
      summary: Get the number of the hosts
      description: Get the number of the hosts
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: integer
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/environments/frequency:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetEnvironmentStats
      summary: Get the stats about the environments
      description: Get the stats about the environments
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Environment:
                      type: string
                    Count:
                      type: integer
                  required:
                    - Environment
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/types:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTypeStats
      summary: Get the stats about the types
      description: Get the stats about the types
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    HardwareAbstractionTechnology:
                      type: string
                    Count:
                      type: integer
                  required:
                    - HardwareAbstractionTechnology
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/operating-systems:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOperatingSystemStats
      summary: Get the stats about the operating systems 
      description: Get the stats about the operating systems
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    OperatingSystem:
                      type: string
                    Count:
                      type: integer
                  required:
                    - OperatingSystem
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/top-unused-instance-resource:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTopUnusedOracleDatabaseInstanceResourceStats
      summary: Get the stats about the top unused instance resource by databases work
      description: Get the stats about the top unused instance resource by databases work
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Hostname:
                      type: string
                    Unused:
                      type: number
                  required:
                    - Hostname
                    - Used
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/compliance:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalTechnologiesCompliance
      summary: Get the total compliance status of all Technologies 
      description: Get the total compliance status of all Technologies 
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllTechnologyComplianceStatus'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/environments:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseEnvironmentStats
      summary: Get the stats about the environment of the databases 
      description: Get the stats about the environment of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Environment:
                      type: string
                    Count:
                      type: string
                  required:
                    - Environment
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/high-reliability:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseHighReliabilityStats
      summary: Get the stats about the high reliability status of the databases 
      description: Get the stats about the high reliability status of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    HA:
                      type: boolean
                    Count:
                      type: string
                  required:
                    - HA
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/versions:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseVersionStats
      summary: Get the stats about the version of the databases 
      description: Get the stats about the version of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Version:
                      type: string
                    Count:
                      type: string
                  required:
                    - Version
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/top-reclaimable:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTopReclaimableOracleDatabaseStats
      summary: Get the list of top databases by reclaimable segment advisors 
      description: Get the list of top databases by reclaimable segment advisors
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Hostname:
                      type: string
                    Dbname:
                      type: string
                    ReclaimableSegmentAdvisors: 
                      type: number
                  required:
                    - Hostname
                    - Dbname
                    - ReclaimableSegmentAdvisors
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/patch-status:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabasePatchStatusStats
      summary: Get the statistics about the patch status of the databases
      description: Get the statistics about the patch status of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
        - $ref: '#/components/parameters/window-time'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Status:
                      type: boolean
                    Count:
                      type: integer
                  required:
                    - Status
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/top-workload:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTopWorkloadOracleDatabaseStats
      summary: Get the list of top databases by workload
      description: Get the list of top databases by workload
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Hostname:
                      type: string
                    Dbname:
                      type: string
                    Workload: 
                      type: number
                  required:
                    - Hostname
                    - Dbname
                    - Workload
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/dataguard-status:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseDataguardStatusStats
      summary: Get the statistics about the dataguard status of the databases
      description: Get the statistics about the dataguard status of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Dataguard:
                      type: boolean
                    Count:
                      type: integer
                  required:
                    - Dataguard
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/archivelog-status:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseArchivelogStatusStats
      summary: Get the statistics about the archive log status of the databases
      description: Get the statistics about the archive log status of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    ArchiveLog:
                      type: boolean
                    Count:
                      type: integer
                  required:
                    - ArchiveLog
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/rac-status:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseRACStatusStats
      summary: Get the statistics about the RAC status of the databases
      description: Get the statistics about the RAC status of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    RAC:
                      type: boolean
                    Count:
                      type: integer
                  required:
                    - RAC
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/total-work:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalOracleDatabaseWorkStats
      summary: Get the total work of the databases
      description: Get the total work of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            text/plain:
              schema:
                type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/total-memory-size:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalOracleDatabaseMemorySizeStats
      summary: Get the total size of the memory of the databases
      description: Get the total size of the memory of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            text/plain:
              schema:
                type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/total-datafile-size:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalOracleDatabaseDatafileSizeStats
      summary: Get the total size of the datafile of the databases
      description: Get the total size of the datafile of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            text/plain:
              schema:
                type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/total-segment-size:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalOracleDatabaseSegmentSizeStats
      summary: Get the total size of the segments of the databases
      description: Get the total size of the segments of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            text/plain:
              schema:
                type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/license-compliance:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleDatabaseLicenseComplianceStatusStats
      summary: Get the status of the license compliance of the databases
      description: Get the status of the license compliance of the databases
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: object
                required:
                  - Count
                  - Used
                  - Compliant
                properties:
                  Count: 
                    type: number
                  Used: 
                    type: number
                  Compliant:
                    type: boolean
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error' 
  /hosts/technologies/oracle/exadata/total-memory-size:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalOracleExadataMemorySizeStats
      summary: Get the total size of the memory of the exadata
      description: Get the total size of the memory of the exadata
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            text/plain:
              schema:
                type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/exadata/total-cpu:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetTotalOracleExadataCPUStats
      summary: Get the total cpu of the exadata
      description: Get the total cpu of the exadata
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: object
                required:
                  - Running
                  - Total
                properties:
                  Running: 
                    type: number
                  Total: 
                    type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error' 
  /hosts/technologies/oracle/exadata/average-storage-usage:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetAverageOracleExadataStorageUsageStats
      summary: Get the average usage of the storage of the exadata
      description: Get the average usage of the storage of the exadata
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            text/plain:
              schema:
                type: number
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/exadata/storage-error-count-status:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleExadataStorageErrorCountStatusStats
      summary: Get the statistics about the ErrorCount status of the storage of the exadata
      description: Get the statistics about the ErrorCount status of the storage of the  exadata
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Failing:
                      type: boolean
                    Count:
                      type: integer
                  required:
                    - Failing
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/exadata/patch-status:
    get:
      tags:
        - api-service
        - fe-user
        - read
      operationId: GetOracleExadataPatchStatusStats
      summary: Get the statistics about the patch status of the exadata
      description: Get the statistics about the patch status of the exadata
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: statistics
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Status:
                      type: boolean
                    Count:
                      type: integer
                  required:
                    - Status
                    - Count
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /hosts/technologies/oracle/databases/segment-advisors:
    get:
      parameters:
        - in: query
          name: full
          description: output mode
          allowEmptyValue: true
          schema:
            type: boolean
            readOnly: true
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/SegmentAdvisor'
                  - type: object
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/SegmentAdvisor'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: object
                properties: {}
              examples: {}
      operationId: SearchOracleDatabaseSegmentAdvisors
      description: Search segment advisors data using the filters in the request
      summary: Search a list of segment advisors
      tags:
        - api-service
        - fe-user
        - read
  /hosts/technologies/oracle/databases/patch-advisors:
    get:
      parameters:
        - $ref: '#/components/parameters/search'
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
        - $ref: '#/components/parameters/window-time'
        - schema:
            type: string
            enum:
              - OK
              - KO
          in: query
          name: status
          description: Filter by status
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/PatchAdvisorInfo'
                  - type: object
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/PatchAdvisorInfo'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: object
                description: XLSX file
              examples: {}
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
      operationId: SearchOracleDatabasePatchAdvisors
      description: Search patch advisors data using the filters in the request
      summary: Search a list of patch advisors
      tags:
        - api-service
        - fe-user
        - read
  /licenses:
    get:
      parameters:
        - in: query
          name: full
          description: output mode
          allowEmptyValue: true
          schema:
            type: boolean
            readOnly: true
        - $ref: '#/components/parameters/sort-by'
        - $ref: '#/components/parameters/sort-desc'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/size'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/LicenseCount'
                  - type: object
                    properties:
                      Content:
                        type: array
                        items:
                          $ref: '#/components/schemas/LicenseCount'
                      Metadata:
                        $ref: '#/components/schemas/PageMetadata'
                    required:
                      - Content
                      - Metadata
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
      operationId: ListLicenses
      description: List licenses using the filters in the request
      summary: Search a list of patch advisors
      tags:
        - api-service
        - fe-user
        - read
    put:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - _id
                  - Count
                properties:
                  _id:
                    type: string
                  Count:
                    type: integer
      responses:
        '200':
          description: OK
      operationId: SetLicensesCount
      description: Set the count of licenses
      summary: Set the count of licenses
      tags:
        - api-service
        - fe-user
        - read
  '/licenses/{name}':
    get:
      operationId: GetLicense
      description: Return a certain license asked in the request
      summary: Return a certain license asked in the request
      tags:
        - api-service
        - fe-user
        - read
      parameters:
        - in: path
          name: name
          description: name of the license
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseCount'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/licenses/{name}/count':
    put:
      operationId: SetLicenseCount
      description: Set the count of a certain license
      summary: Set the count of a certain license
      tags:
        - api-service
        - fe-user
        - read
      parameters:
        - in: path
          name: name
          description: name of the license
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: number
              description: new count value
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/error'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/licenses/{name}/cost-per-processor':
    put:
      operationId: SetLicenseCostPerProcessor
      description: Set the cost per processor of a certain license
      summary: Set the cost per processors
      tags:
        - api-service
        - fe-user
        - read
      parameters:
        - in: path
          name: name
          description: name of the license
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: number
              description: new cost per processor value
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/error'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  '/licenses/{name}/unlimited-status':
    put:
      operationId: SetLicenseUnlimitedStatus
      description: Set the unlimited value of a certain license
      summary: Set true if the license is unlimited, otherwise false
      tags:
        - api-service
        - fe-user
        - read
      parameters:
        - in: path
          name: name
          description: name of the license
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: boolean
              description: new unlimited status
      responses:
        '200':
          description: OK
        '404':
          $ref: '#/components/responses/error'
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /settings/default-database-tag-choiches:
    get:
      operationId: GetDefaultDatabaseTags
      description: Return the default list of database tags from configuration
      summary: Return the default list of database tags from configuration
      tags:
        - api-service
        - fe-user
        - read
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /settings/features:
    get:
      operationId: GetFeatures
      description: Return a map of active/inactive ercole features
      summary: Return a map of active/inactive ercole features
      tags:
        - api-service
        - fe-user
        - read
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json::
              schema:
                $ref: '#/components/schemas/Features' 
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
  /settings/technologies:
    get:
      operationId: GetTechnologyList
      description: Return a list of technology
      summary: Return a list of technology
      tags:
        - api-service
        - fe-user
        - read
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json::
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TechnologyInfo'
  /frontend/dashboard:
    get: 
      operationId: GetFrontendDashboardData
      description: Return the information required by ercole-web dashboard page
      summary: Return the information required by ercole-web dashboard page
      tags:
        - api-service
        - fe-user
        - read
      parameters:
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/older-than'
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                required:
                  - Features
                  - Technologies
                  - Alerts
                properties:
                  Features:
                    $ref: '#/components/schemas/Features' 
                  Alerts: 
                    $ref: '#/components/schemas/AggregatedCodeSeverityAlerts'
                  Technologies:
                    type: object
                    required:
                      - Technologies
                      - Total
                    properties:
                      Technologies:
                        $ref: '#/components/schemas/TechnologyStatus' 
                      Total:
                        $ref: '#/components/schemas/AllTechnologyComplianceStatus' 
        '401':
          $ref: '#/components/responses/error'
        '422':
          $ref: '#/components/responses/error'
        '500':
          $ref: '#/components/responses/error'
security:
  - basicAuthApiService: []
  - tokenAuthApiService: []
